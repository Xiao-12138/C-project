#include <iostream>
using namespace std;

/**
 *1.内存分区模型
 *
 *C++程序在执行时,将内存大方向分配为4个区域;
 *程序运行前:
 *	代码区:存放函数体的二进制代码,由操作系统进行管理;
 *		存放CPU执行的机器指令
 *		代码区是共享的,共享的目的是对于频繁被执行的程序,只需要在内存中有一份代码即可
 *		代码区是只读的,防止程序意外地修改了他的指令
 *
 *	全局区:存放全局变量和静态变量以及常量;
 *		静态变量存放区
 *		包含常量区,字符串常量和其他常量也存于该区;
 *		该区域的数据在程序结束后由操作系统释放;
 *	总结:
 *		C++中在程序运行前分位全局区和代码区
 *		代码区特点是共享和只读
 *		全局区存放全局变量,静态变量,常量
 *		常量区中存放const修饰的全局常量和字符串常量
 *程序运行后:
 *	栈区:由编译器自动分配释放,存放函数的参数值,局部变量等;
 *		注意:
 *			不要返回局部变量的地址,栈区开辟 的数据由编译器自动释放;
 *
 *	堆区:由程序员分配和释放,若程序员不释放,程序结束时由操作系统回收;
 *
 */
int main(int argc, char* argv[])
{
	system("pause");
	return 0;
}